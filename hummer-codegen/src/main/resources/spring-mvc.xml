<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 将/META-INF下在资源映射到/resources/下-->
    <!--<mvc:resources location="/,classpath:/META-INF/publicResources/" mapping="/resources/**"/>-->
    <!--会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
    它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，
    如果不是静态资源的请求，才由DispatcherServlet继续处理。-->
    <mvc:default-servlet-handler/>
    <!--<bean class="org.hummer.openapi.swagger.SwaggerConfig"/>-->
    <!--<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>-->
    <!--<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>-->

    <mvc:annotation-driven/>
    <context:component-scan base-package="org.hummer"/>
    <!-- 视图解析器 -->
    <!-- 对模型视图名称的解析,在请求时模型视图名称添加前后缀 -->
    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
    <!--<property name="prefix" value="views/"/>      &lt;!&ndash; 前缀 &ndash;&gt;-->
    <!--<property name="suffix" value=".jsp"/>   &lt;!&ndash; 后缀 &ndash;&gt;-->
    <!--</bean>-->
    <!-- 避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                            <value>text/html;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                            <value>text/plain;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean id="jsonConverter"
                      class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                            <value>text/html;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                            <value>text/plain;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <bean id="containFilter" class="com.howen.hexin.web.contain.ContainFilter"/>
    <bean id="hexinFilter" class="com.howen.hexin.web.filter.SimpleOncePerRequestFilterChain">
        <property name="filters">
            <list>
                <ref bean="containFilter"></ref>
            </list>
        </property>
    </bean>
    <!--to enable form-data handle by Spring MVC otherwise only x-www-form-urlencoded data can be handled by Spring-->
    <!--<bean id="multipartResolver"-->
    <!--class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
    <!--</bean>-->
    <!-- 静态资源处理 css js images -->
    <!--<mvc:resources location="WEB-INF/resources/**" mapping="/resource/"/>-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1000000000"/>
    </bean>
    <!-- Velocity视图解析器    默认视图  -->
    <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name="cache" value="false"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="viewNames" value="*.html"/>
        <property name="suffix" value=""/>
        <property name="layoutUrl" value="layout/default.html"/>
        <property name="dateToolAttribute" value="date"/>
        <property name="numberToolAttribute" value="number"/>
        <property name="toolboxConfigLocation" value="/WEB-INF/velocity-toolbox.xml"/>
        <property name="allowSessionOverride" value="true"/>
        <property name="allowRequestOverride" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="requestContextAttribute" value="rc"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="order" value="1"/>
    </bean>

    <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/views/"/>
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop>
                <prop key="output.encoding">UTF-8</prop>
                <prop key="contentType">text/html;charset=UTF-8</prop>
            </props>
        </property>
    </bean>
</beans>